{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "rRFcm10kVJwh"
      },
      "outputs": [],
      "source": [
        "A=int(input(\"Ingrese el valor de A: \"))\n",
        "B=int(input(\"Ingrese el valor de B: \"))\n",
        "\n",
        "if A>B:\n",
        "  print(\"A es mayor que B\")\n",
        "\n",
        "elif A<B:\n",
        "  print(\"A es menor que B\")\n",
        "\n",
        "else:\n",
        "    print(\"A es igual a B\")\n"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "nota_1=2.5*0.3\n",
        "nota_2=3*0.15\n",
        "nota_3=4.5*0.15\n",
        "nota_4=5.0*0.2\n",
        "nota_5=4.7*0.2\n",
        "\n",
        "prom = nota_1+nota_2+nota_3+nota_4+nota_5/5\n",
        "if prom>=3:\n",
        "  print(\"aprobado\")\n",
        "  print(prom)\n"
      ],
      "metadata": {
        "id": "uRdn74SAWIXl"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "Y=int(input(\" Ingrese el valor de Y:\"))\n",
        "Z=int(input(\"Ingrese el valor de Z:\"))\n",
        "\n",
        "if Y>Z:\n",
        "  print(\"X=1\")\n",
        "\n",
        "elif Y<Z:\n",
        "  print(\"X=3\")\n",
        "\n",
        "else:\n",
        "  print(\"Y=Z\")\n"
      ],
      "metadata": {
        "id": "Pnbni0-3ZJde"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "A=int(input(\"Ingrese el valor de A:\"))\n",
        "B=int(input(\"Ingrese el valor de B:\"))\n",
        "C=int(input(\"Ingrese el valor de C:\"))\n",
        "\n",
        "if A>B>C:\n",
        "   print(A,B,C)\n",
        "\n",
        "elif A>C>B:\n",
        "  print(A,C,B)\n",
        "\n",
        "elif B>A>C:\n",
        "  print(B,A,C)\n",
        "\n",
        "elif B>C>A:\n",
        "  print(B,C,A)\n",
        "\n",
        "elif C>A>B:\n",
        "  print(C,A,B)\n",
        "\n",
        "elif C>B>A:\n",
        "  print(C,B,A) #AAAAAAAAAAAAAAAAAAAAAAAAAAAA CASI NO ME SALEEEEE :)\n"
      ],
      "metadata": {
        "id": "roKwkx99WVxT"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "INSCRIPCION=int(input(\"Ingrese su número de inscripción:\"))\n",
        "NOMBRE=str(input(\"Ingrese su nombre completo:\"))\n",
        "PATRIMONIO=float(input(\"Ingrese su patrimonio:\"))\n",
        "ESTRATO=int(input(\"Ingrese su estrato socioeconómico:\"))\n",
        "\n",
        "if PATRIMONIO>2000000 and ESTRATO>3:\n",
        "  print(\"Su valor a pagar es: \")\n",
        "  print(PATRIMONIO*0.3)\n",
        "\n",
        "elif PATRIMONIO<=2000000 and ESTRATO<=3:\n",
        "  print(\"Su valor a pagar es: 50.000\") #No sé si interpreté bien el enunciado\n"
      ],
      "metadata": {
        "id": "I4WPtBA-acsG"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "M1=int(input(\"Ingrese la masa de la esfera 1\"))\n",
        "V1=int(input(\"Ingrese el volumen de la esfera 1\"))\n",
        "M2=int(input(\"Ingrese la masa de la esfera 2\"))\n",
        "V2=int(input(\"Ingrese el volumen de la esfera 2\"))\n",
        "M3=int(input(\"Ingrese la masa de la esfera 3\"))\n",
        "V3=int(input(\"Ingrese el volumen de la esfera 3\"))\n",
        "\n",
        "D1=(M1//V1)\n",
        "D2=(M2//V2)\n",
        "D3=(M3//V3)\n",
        "#No lo he terminado\n"
      ],
      "metadata": {
        "id": "GUDZgWVkeVuR"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "bA43M8x4muWJ"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}
